#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"
  source normalize

  if [[ -z "${PKG_HOME:-}" ]]; then
    return 0
  fi

  if [[ ! -d "$PKGMIRDIR" ]]; then
    if [[ -f "/data/git/pkgsrc-mirror-${PKGSRC_BRANCH}.tar.gz" ]]; then
      cd "$shome"
      tar xvfz "/data/git/pkgsrc-mirror-${PKGSRC_BRANCH}.tar.gz"
      cd "$PKGMIRDIR"
      git fetch origin "${PKGSRC_BRANCH}"
    else
      git clone --bare -b "${PKGSRC_BRANCH}" git@github.com:netbsd/pkgsrc "$PKGMIRDIR"
    fi
  fi

  if [[ ! -d "$PKGSRCDIR" ]]; then
    git clone -b "${PKGSRC_BRANCH}" "file://$PKGMIRDIR"  "$PKGSRCDIR"
  fi

  pushd "$PKGSRCDIR"
  git remote set-url origin "file://$PKGMIRDIR"
  git fetch origin "$PKGSRC_BRANCH"
  git branch --set-upstream-to "origin/$PKGSRC_BRANCH"
  git reset --hard "origin/$PKGSRC_BRANCH"
  git checkout -f -b "$PKGSRC_BRANCH" 2>/dev/null || true
  popd

  install -d "$PKG_HOME"

  pkg ensure bootstrap

  if ! pkg ensure devel/ncurses; then
    case "$(uname -s)" in
      Darwin)
        set +f
        pushed $WRKOBJDIR/devel/ncurses/work/*/
        set -f
        env CWRAPPERS_CONFIG_DIR=$(pwd)/../work/.cwrappers/config bmake
        popd
        pkg ensure devel/ncurses
        ;;
      *)
        return 1
        ;;
    esac
  fi

  pkg ensure devel/gettext-tools
  pkg ensure devel/gettext

  pkg ensure pkgtools/pkgin
  pkg ensure pkgtools/pkg_chk

  pkgin update

  pkg ensure security/mozilla-rootcerts
  mozilla-rootcerts install
  pushd $PKG_HOME/install/etc/openssl/certs
  mozilla-rootcerts extract
  mozilla-rootcerts rehash
  popd

  pkg ensure misc/getopt
  pkg ensure net/wget
  pkg ensure www/curl
  pkg ensure devel/gmake
  pkg ensure devel/gettext-tools
}

main "$@"
